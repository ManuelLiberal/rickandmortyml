{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\note\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  var _character$origin;\n  const [character, setCharacter] = useState({});\n  const {\n    detailId\n  } = useParams();\n  useEffect(() => {\n    const URL_BASE = \"https://be-a-rym.up.railway.app/api\";\n    const KEY = \"3e8cca96246b.21c19451ba2b8a27ed20\";\n    fetch(`${URL_BASE}/character/${detailId}?key=${KEY}`).then(response => response.json()).then(data => setCharacter(data));\n  }, []);\n  return (\n    /*#__PURE__*/\n    //?Me pregunto si character.name tiene algun valor, si esto es asi, quiere decir que tengo las otras propiedades, por ende muestro todo. En el caso contrario muestro un texto Loading...\n    //?Esto se usa para que no se vea como se demora en cargar la página\n    _jsxDEV(\"div\", {\n      children: character.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Name: \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", character.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"SpecieS:\", character.species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Gender:\", character.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Origin:\", (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image,\n          alt: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Detail, \"doQt4ajXbUbcmq2XqyVSWdoUks4=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","_character$origin","character","setCharacter","detailId","URL_BASE","KEY","fetch","then","response","json","data","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","src","image","alt","_c","$RefreshReg$"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Detail/Detail.jsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Detail = () => {\r\n  const [character, setCharacter] = useState({});\r\n  const { detailId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const URL_BASE = \"https://be-a-rym.up.railway.app/api\";\r\n    const KEY = \"3e8cca96246b.21c19451ba2b8a27ed20\";\r\n\r\n    fetch(`${URL_BASE}/character/${detailId}?key=${KEY}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCharacter(data));\r\n  }, []);\r\n\r\n  return (\r\n    //?Me pregunto si character.name tiene algun valor, si esto es asi, quiere decir que tengo las otras propiedades, por ende muestro todo. En el caso contrario muestro un texto Loading...\r\n\r\n    //?Esto se usa para que no se vea como se demora en cargar la página\r\n    <div>\r\n      {character.name ? (\r\n        <>\r\n          <h2>Name: {character.name}</h2>\r\n          <p>Status: {character.status}</p>\r\n          <p>SpecieS:{character.species}</p>\r\n          <p>Gender:{character.gender}</p>\r\n          {/* acá a react le cuesta procesar la propiedad de otra propiedad, por eso es que se pregunta por esta solo cuando ya la tenga*/}\r\n          <p>Origin:{character.origin?.name}</p>\r\n          <img src={character.image} alt=\"img\" />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3>Loading...</h3>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Detail;\r\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM;IAAEW;EAAS,CAAC,GAAGV,SAAS,EAAE;EAEhCF,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,qCAAqC;IACtD,MAAMC,GAAG,GAAG,mCAAmC;IAE/CC,KAAK,CAAE,GAAEF,QAAS,cAAaD,QAAS,QAAOE,GAAI,EAAC,CAAC,CAClDE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,YAAY,CAACQ,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IAEA;IACAf,OAAA;MAAAgB,QAAA,EACGV,SAAS,CAACW,IAAI,gBACbjB,OAAA,CAAAE,SAAA;QAAAc,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAAI,QAAM,EAACV,SAAS,CAACW,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC/BrB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACV,SAAS,CAACgB,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjCrB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACV,SAAS,CAACiB,OAAO;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAClCrB,OAAA;UAAAgB,QAAA,GAAG,SAAO,EAACV,SAAS,CAACkB,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAEhCrB,OAAA;UAAAgB,QAAA,GAAG,SAAO,GAAAX,iBAAA,GAACC,SAAS,CAACmB,MAAM,cAAApB,iBAAA,uBAAhBA,iBAAA,CAAkBY,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACtCrB,OAAA;UAAK0B,GAAG,EAAEpB,SAAS,CAACqB,KAAM;UAACC,GAAG,EAAC;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA,gBACtC,gBAEHrB,OAAA,CAAAE,SAAA;QAAAc,QAAA,eACEhB,OAAA;UAAAgB,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;IAEtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG;AAEV,CAAC;AAACjB,EAAA,CAnCID,MAAM;EAAA,QAEWL,SAAS;AAAA;AAAA+B,EAAA,GAF1B1B,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}