{"ast":null,"code":"//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\n//1- El email tiene algo?\nconst validation = userData => {\n  const errors = {};\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\n\n  const email = userData.email;\n  const emailLg = userData.email.length;\n  if (!email) {\n    errors.email = \"Por favor, ingresa un email\";\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)) errors.email = \"El email es inválido\";else if (emailLg > 35) errors.email = \"El email superó la cantidad de caracteres máxima\";else errors.email = \"\";\n\n  //? Valida el formato de contraseña\n  const password = userData.password;\n  const passwordLg = userData.password.length;\n  if (!(passwordLg <= 10 && passwordLg >= 6)) setErrors({\n    ...errors,\n    password: \"La contraseña debe tener entre 6 y 10 caracteres\"\n  });else if (!/[0-9]/.test(password)) {\n    setErrors({\n      ...errors,\n      password: \"La contraseña debe tener al menos un número\"\n    });\n  } else setErrors({\n    ...errors,\n    password: \"\"\n  });\n  return errors; //1-la contraseña tiene que tener entre 6 y 10 caracteres\n};\n\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","email","emailLg","length","test","password","passwordLg","setErrors"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\r\n//1- El email tiene algo?\r\nconst validation = (userData) => {\r\n  const errors = {};\r\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\r\n\r\n  const email = userData.email;\r\n  const emailLg = userData.email.length;\r\n\r\n  if (!email) {\r\n    errors.email = \"Por favor, ingresa un email\";\r\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email))\r\n    errors.email = \"El email es inválido\";\r\n  else if (emailLg > 35)\r\n    errors.email = \"El email superó la cantidad de caracteres máxima\";\r\n  else errors.email = \"\";\r\n\r\n  //? Valida el formato de contraseña\r\n  const password = userData.password;\r\n  const passwordLg = userData.password.length;\r\n  if (!(passwordLg <= 10 && passwordLg >= 6))\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe tener entre 6 y 10 caracteres\",\r\n    });\r\n  else if (!/[0-9]/.test(password)) {\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe tener al menos un número\",\r\n    });\r\n  } else setErrors({ ...errors, password: \"\" });\r\n\r\n  return errors; //1-la contraseña tiene que tener entre 6 y 10 caracteres\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,UAAU,GAAIC,QAAQ,IAAK;EAC/B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB;;EAEA,MAAMC,KAAK,GAAGF,QAAQ,CAACE,KAAK;EAC5B,MAAMC,OAAO,GAAGH,QAAQ,CAACE,KAAK,CAACE,MAAM;EAErC,IAAI,CAACF,KAAK,EAAE;IACVD,MAAM,CAACC,KAAK,GAAG,6BAA6B;EAC9C,CAAC,MAAM,IAAI,6CAA6C,CAACG,IAAI,CAACH,KAAK,CAAC,EAClED,MAAM,CAACC,KAAK,GAAG,sBAAsB,CAAC,KACnC,IAAIC,OAAO,GAAG,EAAE,EACnBF,MAAM,CAACC,KAAK,GAAG,kDAAkD,CAAC,KAC/DD,MAAM,CAACC,KAAK,GAAG,EAAE;;EAEtB;EACA,MAAMI,QAAQ,GAAGN,QAAQ,CAACM,QAAQ;EAClC,MAAMC,UAAU,GAAGP,QAAQ,CAACM,QAAQ,CAACF,MAAM;EAC3C,IAAI,EAAEG,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,CAAC,CAAC,EACxCC,SAAS,CAAC;IACR,GAAGP,MAAM;IACTK,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC,KACA,IAAI,CAAC,OAAO,CAACD,IAAI,CAACC,QAAQ,CAAC,EAAE;IAChCE,SAAS,CAAC;MACR,GAAGP,MAAM;MACTK,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAME,SAAS,CAAC;IAAE,GAAGP,MAAM;IAAEK,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE7C,OAAOL,MAAM,CAAC,CAAC;AACjB,CAAC;;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}