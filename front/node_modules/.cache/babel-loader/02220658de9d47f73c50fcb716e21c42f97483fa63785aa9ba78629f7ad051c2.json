{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\note\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport style from \"./Form.module.css\";\n//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\n//1- El email tiene algo?\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validate = (userData, errors, setErrors) => {\n  //?Valida si el email esta vacio, en el caso de que no lo este, se pregunta si es válido o no\n\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: \"Email vació\"\n    });\n  } else {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email)) {\n      setErrors({\n        ...errors,\n        email: \"\"\n      });\n    } else setErrors({\n      ...errors,\n      email: \"Email inválido\"\n    });\n  }\n};\n\n//!--------------------------COMIENZA FORM----------------------------------------//\n\nconst Form = () => {\n  _s();\n  //?ESTADO DE FORMULARIO\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  //?ESTADO DE ERRORES DEl formulario\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  //?FUNCIÓN ONCHANGE: ENCARGADA DE ALMACENAR LO ESCRITO EN EL ESTADO\n  const handleInputChange = event => {\n    //preguntar de donde viene el evento, eso va a depender en cual propiedad del estado va a almacenar\n    const property = event.target.name;\n    const value = event.target.value;\n    setUserData({\n      ...userData,\n      [property]: value\n    }); //*cambio el estado ... esto demora\n    // validate(form, errors, setErrors); //*des esta manera se maneja un estado viejo\n    validate({\n      ...userData,\n      [property]: value\n    }, errors, setErrors);\n  };\n\n  //?FUNCIÓN SUBMITHANDLER: maneja el submit del form\n  const submitHandler = event => {\n    event.preventDefault();\n    alert(\"login exitoso\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: userData.email,\n        onChange: changeHandler,\n        className: errors.email ? style.bordeRed : style.bordeGreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: userData.password,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"lKWE/TGSQRbZXMAZqi6Lq3X8tcg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","style","jsxDEV","_jsxDEV","validate","userData","errors","setErrors","email","test","Form","_s","setUserData","password","handleInputChange","event","property","target","name","value","submitHandler","preventDefault","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","changeHandler","className","bordeRed","bordeGreen","_c","$RefreshReg$"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport style from \"./Form.module.css\";\r\n//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\r\n//1- El email tiene algo?\r\n\r\nconst validate = (userData, errors, setErrors) => {\r\n  //?Valida si el email esta vacio, en el caso de que no lo este, se pregunta si es válido o no\r\n\r\n  if (!userData.email) {\r\n    setErrors({ ...errors, email: \"Email vació\" });\r\n  } else {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email)) {\r\n      setErrors({ ...errors, email: \"\" });\r\n    } else setErrors({ ...errors, email: \"Email inválido\" });\r\n  }\r\n};\r\n\r\n//!--------------------------COMIENZA FORM----------------------------------------//\r\n\r\nconst Form = () => {\r\n  //?ESTADO DE FORMULARIO\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //?ESTADO DE ERRORES DEl formulario\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //?FUNCIÓN ONCHANGE: ENCARGADA DE ALMACENAR LO ESCRITO EN EL ESTADO\r\n  const handleInputChange = (event) => {\r\n    //preguntar de donde viene el evento, eso va a depender en cual propiedad del estado va a almacenar\r\n    const property = event.target.name;\r\n    const value = event.target.value;\r\n    setUserData({ ...userData, [property]: value }); //*cambio el estado ... esto demora\r\n    // validate(form, errors, setErrors); //*des esta manera se maneja un estado viejo\r\n    validate({ ...userData, [property]: value }, errors, setErrors);\r\n  };\r\n\r\n  //?FUNCIÓN SUBMITHANDLER: maneja el submit del form\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"login exitoso\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div>\r\n        <label htmlFor=\"email\">email</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={userData.email}\r\n          onChange={changeHandler}\r\n          className={errors.email ? style.bordeRed : style.bordeGreen}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={userData.password}\r\n          onChange={changeHandler}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}