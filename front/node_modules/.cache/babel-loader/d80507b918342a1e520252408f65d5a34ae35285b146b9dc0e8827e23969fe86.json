{"ast":null,"code":"//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\n//1- El email tiene algo?\nconst validation = (userData, errors, setErrors) => {\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\n\n  const email = userData.email;\n  const emailLg = userData.email.length;\n  if (!email) {\n    setErrors({\n      ...errors,\n      email: \"Por favor, ingresa un email\"\n    });\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email)) setErrors({\n    ...errors,\n    email: \"El email es inválido\"\n  });else if (emailLg > 35) setErrors({\n    ...errors,\n    email: \"El email superó la cantidad de caracteres máxima\"\n  });else setErrors({\n    ...errors,\n    email: \"\"\n  });\n  //? Valida el formato de contraseña\n  const passwordLg = userData.password.length;\n  const password = userData.password;\n  if (!password) setErrors({\n    ...errors,\n    password: \"Por favor, ingresa una contraseña\"\n  });else if (!(passwordLg <= 10 && passwordLg >= 6)) setErrors({\n    ...errors,\n    password: \"La contraseña debe tener entre 6 y 10 caracteres\"\n  });else if (!/[0-9]/.test(password)) {\n    setErrors({\n      ...errors,\n      password: \"La contraseña debe tener al menos un número\"\n    });\n  } else setErrors({\n    ...errors,\n    password: \"\"\n  });\n  //1-la contraseña tiene que tener entre 6 y 10 caracteres\n};\n\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","email","emailLg","length","test","passwordLg","password"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\r\n//1- El email tiene algo?\r\nconst validation = (userData, errors, setErrors) => {\r\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\r\n\r\n  const email = userData.email;\r\n  const emailLg = userData.email.length;\r\n\r\n  if (!email) {\r\n    setErrors({ ...errors, email: \"Por favor, ingresa un email\" });\r\n  } else if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(email))\r\n    setErrors({ ...errors, email: \"El email es inválido\" });\r\n  else if (emailLg > 35)\r\n    setErrors({\r\n      ...errors,\r\n      email: \"El email superó la cantidad de caracteres máxima\",\r\n    });\r\n  else setErrors({ ...errors, email: \"\" });\r\n  //? Valida el formato de contraseña\r\n  const passwordLg = userData.password.length;\r\n  const password = userData.password;\r\n  if (!password)\r\n    setErrors({ ...errors, password: \"Por favor, ingresa una contraseña\" });\r\n  else if (!(passwordLg <= 10 && passwordLg >= 6))\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe tener entre 6 y 10 caracteres\",\r\n    });\r\n  else if (!/[0-9]/.test(password)) {\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe tener al menos un número\",\r\n    });\r\n  } else setErrors({ ...errors, password: \"\" });\r\n  //1-la contraseña tiene que tener entre 6 y 10 caracteres\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAClD;;EAEA,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK;EAC5B,MAAMC,OAAO,GAAGJ,QAAQ,CAACG,KAAK,CAACE,MAAM;EAErC,IAAI,CAACF,KAAK,EAAE;IACVD,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,KAAK,EAAE;IAA8B,CAAC,CAAC;EAChE,CAAC,MAAM,IAAI,6CAA6C,CAACG,IAAI,CAACH,KAAK,CAAC,EAClED,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,KAAK,EAAE;EAAuB,CAAC,CAAC,CAAC,KACrD,IAAIC,OAAO,GAAG,EAAE,EACnBF,SAAS,CAAC;IACR,GAAGD,MAAM;IACTE,KAAK,EAAE;EACT,CAAC,CAAC,CAAC,KACAD,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,KAAK,EAAE;EAAG,CAAC,CAAC;EACxC;EACA,MAAMI,UAAU,GAAGP,QAAQ,CAACQ,QAAQ,CAACH,MAAM;EAC3C,MAAMG,QAAQ,GAAGR,QAAQ,CAACQ,QAAQ;EAClC,IAAI,CAACA,QAAQ,EACXN,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAoC,CAAC,CAAC,CAAC,KACrE,IAAI,EAAED,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,CAAC,CAAC,EAC7CL,SAAS,CAAC;IACR,GAAGD,MAAM;IACTO,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC,KACA,IAAI,CAAC,OAAO,CAACF,IAAI,CAACE,QAAQ,CAAC,EAAE;IAChCN,SAAS,CAAC;MACR,GAAGD,MAAM;MACTO,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAMN,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7C;AACF,CAAC;;AAED,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}