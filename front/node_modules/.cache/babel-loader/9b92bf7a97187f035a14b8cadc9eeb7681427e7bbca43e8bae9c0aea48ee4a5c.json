{"ast":null,"code":"//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\n//1- El email tiene algo?\nconst validate = (userData, errors, setErrors) => {\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\n  const passwordLg = userData.password.length;\n  const password = userData.password;\n  if (!(passwordLg <= 10 && passwordLg >= 6) || !/[0-9]/.test(password)) {\n    setErrors({\n      ...errors,\n      password: \"Contraseña inválida\"\n    });\n  } else setErrors({\n    ...errors,\n    password: \"\"\n  });\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: \"Email vacío\"\n    });\n  } else {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email) && userData.email.length <= 35) {\n      setErrors({\n        ...errors,\n        email: \"\"\n      });\n    } else setErrors({\n      ...errors,\n      email: \"Email inválido\"\n    });\n  }\n  //? Valida el formato de contraseña\n  //1-la contraseña tiene que tener entre 6 y 10 caracteres\n};\n\nexport default validate;","map":{"version":3,"names":["validate","userData","errors","setErrors","passwordLg","password","length","test","email"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Form/validation.js"],"sourcesContent":["//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\r\n//1- El email tiene algo?\r\nconst validate = (userData, errors, setErrors) => {\r\n  //?Valida si el email esta vacio, si cumple el formato y si no pasa de los 35 caracteres\r\n  const passwordLg = userData.password.length;\r\n  const password = userData.password;\r\n  if (!(passwordLg <= 10 && passwordLg >= 6) || !/[0-9]/.test(password)) {\r\n    setErrors({ ...errors, password: \"Contraseña inválida\" });\r\n  } else setErrors({ ...errors, password: \"\" });\r\n  if (!userData.email) {\r\n    setErrors({ ...errors, email: \"Email vacío\" });\r\n  } else {\r\n    if (\r\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email) &&\r\n      userData.email.length <= 35\r\n    ) {\r\n      setErrors({ ...errors, email: \"\" });\r\n    } else setErrors({ ...errors, email: \"Email inválido\" });\r\n  }\r\n  //? Valida el formato de contraseña\r\n  //1-la contraseña tiene que tener entre 6 y 10 caracteres\r\n};\r\n\r\nexport default validate;\r\n"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAChD;EACA,MAAMC,UAAU,GAAGH,QAAQ,CAACI,QAAQ,CAACC,MAAM;EAC3C,MAAMD,QAAQ,GAAGJ,QAAQ,CAACI,QAAQ;EAClC,IAAI,EAAED,UAAU,IAAI,EAAE,IAAIA,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAACG,IAAI,CAACF,QAAQ,CAAC,EAAE;IACrEF,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,QAAQ,EAAE;IAAsB,CAAC,CAAC;EAC3D,CAAC,MAAMF,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEG,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7C,IAAI,CAACJ,QAAQ,CAACO,KAAK,EAAE;IACnBL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,KAAK,EAAE;IAAc,CAAC,CAAC;EAChD,CAAC,MAAM;IACL,IACE,6CAA6C,CAACD,IAAI,CAACN,QAAQ,CAACO,KAAK,CAAC,IAClEP,QAAQ,CAACO,KAAK,CAACF,MAAM,IAAI,EAAE,EAC3B;MACAH,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEM,KAAK,EAAE;MAAG,CAAC,CAAC;IACrC,CAAC,MAAML,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,KAAK,EAAE;IAAiB,CAAC,CAAC;EAC1D;EACA;EACA;AACF,CAAC;;AAED,eAAeR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}