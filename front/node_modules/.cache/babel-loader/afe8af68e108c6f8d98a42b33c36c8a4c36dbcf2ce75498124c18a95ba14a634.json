{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\note\\\\Desktop\\\\rick_and_morty\\\\src\\\\components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\n//1- El email tiene algo?\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validate = (form, errors, setErrors) => {\n  //?Valida si el email esta vacio\n  if (!form.email) {\n    setErrors({\n      ...errors,\n      email: \"el username esta vació\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      email: \"\"\n    });\n  }\n  //\n};\n\n//!--------------------------COMIENZA FORM----------------------------------------//\n\nconst Form = () => {\n  _s();\n  //?ESTADO DE FORMULARIO\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  //?ESTADO DE ERRORES DEl formulario\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  //?FUNCIÓN ONCHANGE: ENCARGADA DE ALMACENAR LO ESCRITO EN EL ESTADO\n  const changeHandler = event => {\n    //preguntar de donde viene el evento, eso va a depender en cual propiedad del estado va a almacenar\n    const property = event.target.name;\n    const value = event.target.value;\n    setForm({\n      ...form,\n      [property]: value\n    }); //*cambio el estado ... esto demora\n    // validate(form, errors, setErrors); //*des esta manera se maneja un estado viejo\n    validate({\n      ...form,\n      [property]: value\n    }, errors, setErrors);\n  };\n\n  //?FUNCIÓN SUBMITHANDLER: maneja el submit del form\n  const submitHandler = event => {\n    event.preventDefault();\n    alert(\"login exitoso\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: form.username,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: form.password,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"24rSJI9XpvXiB3Jjh/z4dIK7yOY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","validate","form","errors","setErrors","email","Form","_s","setForm","password","changeHandler","event","property","target","name","value","submitHandler","preventDefault","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","username","onChange","_c","$RefreshReg$"],"sources":["C:/Users/note/Desktop/rick_and_morty/src/components/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n//?FUNCION VALIDADORA: SE VA A FIJAR SI EL EMAIL ESTA BIEN\r\n//1- El email tiene algo?\r\n\r\nconst validate = (form, errors, setErrors) => {\r\n  //?Valida si el email esta vacio\r\n  if (!form.email) {\r\n    setErrors({ ...errors, email: \"el username esta vació\" });\r\n  } else {\r\n    setErrors({ ...errors, email: \"\" });\r\n  }\r\n  //\r\n};\r\n\r\n//!--------------------------COMIENZA FORM----------------------------------------//\r\n\r\nconst Form = () => {\r\n  //?ESTADO DE FORMULARIO\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //?ESTADO DE ERRORES DEl formulario\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //?FUNCIÓN ONCHANGE: ENCARGADA DE ALMACENAR LO ESCRITO EN EL ESTADO\r\n  const changeHandler = (event) => {\r\n    //preguntar de donde viene el evento, eso va a depender en cual propiedad del estado va a almacenar\r\n    const property = event.target.name;\r\n    const value = event.target.value;\r\n    setForm({ ...form, [property]: value }); //*cambio el estado ... esto demora\r\n    // validate(form, errors, setErrors); //*des esta manera se maneja un estado viejo\r\n    validate({ ...form, [property]: value }, errors, setErrors);\r\n  };\r\n\r\n  //?FUNCIÓN SUBMITHANDLER: maneja el submit del form\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"login exitoso\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={form.username}\r\n          onChange={changeHandler}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={form.password}\r\n          onChange={changeHandler}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}